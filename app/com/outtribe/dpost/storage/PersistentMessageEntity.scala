package com.outtribe.dpost.storage
import com.googlecode.mapperdao.Entity
import com.googlecode.mapperdao.SurrogateLongId
import com.googlecode.mapperdao.ValuesMap



/**
 * Copyright (C) 2013 Peter Kovgan
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
object PersistentMessageEntity extends Entity [Long, SurrogateLongId, PersistentMessageData] {
    val id = key("id") autogenerated (_.id)
    val template = column("template") to (_.template)
    val body = column("body") to (_.body)
    val subj = column("subj") to (_.subj)
    val lang = column("lang") to (_.lang)
    val toAddr = column("toaddr") to (_.toAddr)
    val status = column("status") to (_.status)
    val touchDate = column("touchDate") to (_.touchDate)
    def constructor(implicit m : ValuesMap) = new PersistentMessageData(template, body, subj, lang, toAddr, status, touchDate) with SurrogateLongId {
        val id: Long = PersistentMessageEntity.id
    }

}
